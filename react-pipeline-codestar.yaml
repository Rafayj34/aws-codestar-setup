AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Vite/React CI/CD: GitHub (CodeStar Connection) 

Parameters:
  CodeStarConnectionArn:
    Type: String
    Description: ARN of a pre-created AWS::CodeStarConnections::Connection (GitHub). Create in console or via CLI.
  GitHubRepo:
    Type: String
    Description: GitHub repo in format "owner/repo"
  GitHubBranch:
    Type: String
    Default: main
    Description: Branch to deploy from

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-website-bucket"
      VersioningConfiguration:
        Status: Suspended

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontGetObject
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${WebsiteBucket}/*"
            Condition:
              StringLike:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/*"

  CloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${AWS::StackName}-oac"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Origins:
          - Id: WebsiteOrigin
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            S3OriginConfig: {}
            OriginAccessControlId: !Ref CloudFrontOAC
        DefaultCacheBehavior:
          TargetOriginId: WebsiteOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  PipelineArtifactBucket:
    Type: AWS::S3::Bucket

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${PipelineArtifactBucket}"
                  - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref CodeStarConnectionArn
              - Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource: "*"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CodeBuildAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${PipelineArtifactBucket}"
                  - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
                  - !Sub "arn:aws:s3:::${WebsiteBucket}"
                  - !Sub "arn:aws:s3:::${WebsiteBucket}/*"
              - Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/*"

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-build"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: WEBSITE_BUCKET
            Value: !Ref WebsiteBucket
          - Name: CLOUDFRONT_DISTRIBUTION_ID
            Value: !Ref CloudFrontDistribution
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 18
              commands:
                - echo "installing deps"
                - npm ci
            build:
              commands:
                - echo "building app"
                - npm run build
            post_build:
              commands:
                - echo "syncing to s3://$WEBSITE_BUCKET"
                - aws s3 sync dist/ s3://$WEBSITE_BUCKET --delete
                - echo "creating cloudfront invalidation"
                - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
          artifacts:
            files:
              - '**/*'
            base-directory: dist
      Artifacts:
        Type: CODEPIPELINE
      TimeoutInMinutes: 20
      Cache:
        Type: NO_CACHE

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !Ref CodeStarConnectionArn
                FullRepositoryId: !Ref GitHubRepo
                BranchName: !Ref GitHubBranch
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref BuildProject
              RunOrder: 1

  PipelineTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-trigger"
      EventPattern:
        source:
          - aws.codestar
        detail-type:
          - "CodeStar Source Connection Repository State Change"
        resources:
          - !Ref CodeStarConnectionArn
        detail:
          repositoryName:
            - !Select [1, !Split ["/", !Ref GitHubRepo]]
          branchName:
            - !Ref GitHubBranch
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}
          RoleArn: !GetAtt CodePipelineRole.Arn
          Id: CodePipelineTarget

Outputs:
  CloudFrontURL:
    Description: "Your CloudFront URL (https)"
    Value: !Sub "https://${CloudFrontDistribution.DomainName}"

  S3Bucket:
    Description: "Website S3 bucket"
    Value: !Ref WebsiteBucket
